[{"content":"Technical focus\n","href":"/","title":"Home"},{"content":"","href":"/blog/","title":"Blog"},{"content":"","href":"/docs/","title":"Documentation"},{"content":"Credit This site is powered by\n Github Pages Hugo Minimo  ","href":"/about/","title":"About"},{"content":"","href":"/authors/","title":"Authors"},{"content":"","href":"/categories/","title":"Categories"},{"content":"","href":"/authors/devcfei/","title":"devcfei"},{"content":"","href":"/tags/linux/","title":"linux"},{"content":"Introduction to setup VNC on Ubuntu 18.04.4 LTS\n  Uninstall the Default Gnome Desktop\n$sudo apt remove gnome-shell $sudo apt remove gnome $sudo apt autoremove $sudo apt purge gnome $sudo apt autoclean $sudo apt clean   Install TigerVNC\n$ sudo apt install xserver-xorg-core $ sudo apt install tigervnc-standalone-server tigervnc-xorg-extension tigervnc-viewer $ sudo apt-get install gsfonts-x11 xfonts-base xfonts-75dpi xfonts-100dpi   Install Gnome 3 and start Gnome, configurate for start on boot\n$ sudo apt install ubuntu-gnome-desktop $ sudo systemctl start gdm $ sudo systemctl enable gdm   Set VNC Server Password\n$ vncpasswd Password: Verify: Would you like to enter a view-only password (y/n)? y Password: Verify:   Startup Script Settings\n$ vim ~/.vnc/xstartup #!/bin/sh  [ -x /etc/vnc/xstartup ] \u0026amp;\u0026amp; exec /etc/vnc/xstartup [ -r $HOME/.Xresources ] \u0026amp;\u0026amp; xrdb $HOME/.Xresources vncconfig -iconic \u0026amp; dbus-launch --exit-with-session gnome-session \u0026amp;   Start VNC Server\n$ vncserver -localhost no -geometry 1920x950 -depth 24   Connect by VNC Viewer Download the vncviewer from realvnc and follow the instructions to\n  Kill VNC Server\n$ vncserver -list $ vncserver -kill :1 $ vncserver -kill :*   ","href":"/blog/linux/setup-vnc/","title":"Setup VNC"},{"content":"","href":"/tags/","title":"Tags"},{"content":"","href":"/categories/technical/","title":"technical"},{"content":"","href":"/tags/vnc/","title":"vnc"},{"content":"bootstrap for x86 processor.\n","href":"/docs/bootstrap-x86/","title":"Bootstrap-x86"},{"content":"","href":"/tags/x86/","title":"x86"},{"content":"","href":"/categories/x86/","title":"x86"},{"content":"Introduction to the COM\nExample\n","href":"/blog/windows/com-intro/","title":"Component Object Model(COM)"},{"content":"","href":"/tags/c/","title":"c"},{"content":"An example to hook malloc\nSource /* * gcc -o hook main.c * ./hook */ #include \u0026lt;stdlib.h\u0026gt;#include \u0026lt;stdio.h\u0026gt;#include \u0026lt;string.h\u0026gt;#include \u0026lt;stdbool.h\u0026gt;#include \u0026lt;sys/mman.h\u0026gt; typedef int (*foo_func)(int a); foo_func ptr_foo = NULL; int foo(int a) { return a + 2; } int foo_hook(int a) { printf(\u0026#34;foo_hook - %d\\n\u0026#34;, a); a += 2; return ptr_foo(a); } #pragma pack(push, 1) struct thunk { char e9; unsigned int offset; }; #pragma pack(pop)  struct thunk thunk_foo; void test_malloc_hook(); int main() { int ret; int foo_size; printf(\u0026#34;hook!\\n\u0026#34;); printf(\u0026#34;sizeof(struct thunk) =%ld\\n\u0026#34;, sizeof(struct thunk)); printf(\u0026#34;foo =%p\\n\u0026#34;, foo); printf(\u0026#34;foo_hook =%p\\n\u0026#34;, foo_hook); foo_size = (int)((unsigned long)foo_hook - (unsigned long)foo); printf(\u0026#34;foo_size =%d\\n\u0026#34;, foo_size); thunk_foo.e9 = 0xe9; thunk_foo.offset = foo_size - 5; printf(\u0026#34;foo offset =%d\\n\u0026#34;, thunk_foo.offset); /* * make a copy of original foo */ void *foo2 = mmap(NULL, 4096, PROT_READ | PROT_WRITE | PROT_EXEC, MAP_ANON | MAP_PRIVATE, -1, 0); memcpy(foo2, foo, foo_size); ptr_foo = foo2; /* * test the copy foo2 works */ printf(\u0026#34;foo(10)=%d\\n\u0026#34;, foo(10)); printf(\u0026#34;ptr_foo(20)=%d\\n\u0026#34;, ptr_foo(20)); /* * hook the original foo by thunk_foo which is a jump to foo_hook */ void *page = (void *)((unsigned long)foo \u0026amp; ~0xfffUL); ret = mprotect(page, 4096, PROT_READ | PROT_WRITE | PROT_EXEC); if (ret \u0026lt; 0) { perror(\u0026#34;mprotect failed!\\n\u0026#34;); exit(ret); } memcpy(foo, \u0026amp;thunk_foo, sizeof(struct thunk)); printf(\u0026#34;foo(10)=%d\\n\u0026#34;, foo(10)); test_malloc_hook(); return ret; } typedef int (*foo_func)(int a); void af() { printf(\u0026#34;af\\n\u0026#34;); void *p = malloc(1024); free(p); } typedef void *(*malloc_func)(size_t size); void malloc_hook_restore(); void malloc_hook_enable(); void *malloc_hook(size_t size) { void *p; printf(\u0026#34;malloc_hook- size = %ld\\n\u0026#34;, size); malloc_hook_restore(); p = malloc(size); malloc_hook_enable(); return p; } int malloc_size = 0; void dump5(void *addr) { unsigned char *p = addr; printf(\u0026#34;%2.2X %2.2X %2.2X %2.2X %2.2X\\n\u0026#34;, p[0], p[1], p[2], p[3], p[4]); } unsigned char malloc5byte[5]; struct thunk thunk_malloc; void malloc_hook_enable() { /* * save the first 5 bytes */ memcpy(malloc5byte, malloc, 5); malloc_size = (int)((unsigned long)malloc_hook - (unsigned long)malloc); thunk_malloc.e9 = 0xe9; thunk_malloc.offset = malloc_size - 5; void *page = (void *)((unsigned long)malloc \u0026amp; ~0xfffUL); int ret = mprotect(page, 4096, PROT_READ | PROT_WRITE | PROT_EXEC); if (ret \u0026lt; 0) { perror(\u0026#34;mprotect failed!\\n\u0026#34;); exit(ret); } memcpy(malloc, \u0026amp;thunk_malloc, 5); } void malloc_hook_restore() { memcpy(malloc, malloc5byte, 5); } void test_malloc_hook() { printf(\u0026#34;test_malloc_hook\\n\u0026#34;); af(); malloc_hook_enable(); af(); af(); af(); } ","href":"/blog/programming/hook-malloc/","title":"Hook malloc"},{"content":"","href":"/categories/programming/","title":"programming"},{"content":"ELF file format ","href":"/blog/knowledge/elf/","title":"ELF"},{"content":"","href":"/tags/elf/","title":"elf"},{"content":"","href":"/categories/knowledge/","title":"knowledge"},{"content":"Color Text Mode There 8 pages in the address space B8000h~ BFFFFh It\u0026rsquo;s most popular that the monitor shows the page 0. One page shows 80*25 characters, each character use 2 bytes\nCharacter layout    Byte Description     0 the ASCII code   1 the control code    Control code    Bit Description     0 Front B   1 Front G   2 Front R   3 Highlight   4 Back B   5 Back G   6 Back R   7 Blink    Underline The Underline is controlled by VGA register 14 and 15. The PC system use port 0x3d4 and 0x3d4 VGA registers 0x3d4 is the index regiser and 0x3d4 is the data register. For instance, to write value to VGA registers 14\nout 0x3d4, 14 out 0x3d5, value    Reg Description     14 Underline Position X   15 Underline Position Y    ","href":"/blog/knowledge/display-vesa/","title":"Display VESA"},{"content":"","href":"/tags/pc/","title":"pc"},{"content":"MBR GPT ","href":"/blog/knowledge/disk/","title":"Disk"},{"content":"BIOS Boot After BIOS load completed, the memory layout as the following table. If a bootable device found, the BIOS copy the IPL(Initial Program Loader) to 0x7c00 and JMP to 0x7c00.\nThe IPL is the MBR(the 1st sector) of a hard disk.\nBIOS Memroy Layout\n   Start End Size Description     0x00000 0x9FFFF 640K Lower 640K RAM   0xA0000 0xBFFFF 128K Video RAM   0xC0000 0xEFFFF 192K Other Device BIOS   0xF0000 0xFFFFF 64K System BIOS    Lower 640K RAM Layout\n   Start End Description     0x00000 0x003FF 1K Interrupt Vector   0x00400 0x07BFF User RAM   0x07C00 0x07DFF IPL 512 Bytes   0x07E00 0x9FFFF User RAM, 623104 Bytes(640KB - 0x7e00)    ","href":"/blog/knowledge/x86-pc-boot-bios/","title":"PC Boot from BIOS"},{"content":"An example to reverse the word in a string.\nSource #include \u0026lt;stdio.h\u0026gt; char* strrevw(char* string){ char* s=string; char* e=s; char ch; char *ws,*we; while(1){ if(*e==\u0026#39; \u0026#39; || *e==\u0026#39;\\0\u0026#39;){ ws=s; we=e-1; while(ws\u0026lt;we){ ch=*ws; *ws++=*we; *we--=ch; } if(*e==\u0026#39;\\0\u0026#39;) break; s=e; while(*++s==\u0026#39; \u0026#39;); } e++; } return string; } int main(){ char a[]=\u0026#34;123 1234 12345\u0026#34;; printf(\u0026#34;%s\\n\u0026#34;,a); printf(\u0026#34;%s\\n\u0026#34;,strrevw(a)); return 0; } ","href":"/blog/programming/c-string-reverse-words/","title":"Reverse words in a string by C"},{"content":"","href":"/tags/c++/","title":"c++"},{"content":"An example show member function pointer and template\nSource template \u0026lt;typename T\u0026gt; class CFooImpl { protected: void callfoo() { T* t = static_cast\u0026lt;T*\u0026gt;(this); t-\u0026gt;foo(); } void callfoo(void(T::* f)()) { // how to call f ??  } void callfoo(T\u0026amp; r, void(T::* f)()) { (r.*f)(); } void callfoo(T* p, void(T::* f)()) { (p-\u0026gt;*f)(); } }; class CFoo :public CFooImpl\u0026lt;CFoo\u0026gt; { public: void foo() { printf(\u0026#34;foo!\\n\u0026#34;); } void test() { auto pf = \u0026amp;CFoo::foo; callfoo(); callfoo(*this, pf); callfoo(this, pf); } }; int main() { CFoo a; a.test(); return 0; } ","href":"/blog/programming/cpp-member-function-pointer-and-template/","title":"C++ member function pointer and template"},{"content":"","href":"/categories/devops/","title":"devops"},{"content":"","href":"/tags/git/","title":"git"},{"content":"","href":"/tags/gitbucket/","title":"gitbucket"},{"content":"Preparation Download the gitbucket.war file, for example to /home/gitbucket/app/\nStart gitbucket gitbucket.example.com cd /home/gitbucket/app/ nohup java -jar gitbucket.war --port=8080 --hostname=gitbucket.example.com --gitbucket.home=/home/gitbucket/repos \u0026gt; /home/gitbucket/log\u0026gt;\u0026amp;1 \u0026amp; Enable apache2 Proxyp Reserve Host Edit a gitbucket.conf in /etc/apache2/sites-available\nvim /etc/apache2/sites-available/gitbucket.conf Example:\n\u0026lt;VirtualHost *:80\u0026gt; ServerName gitbucket.example.com # proxy proxypreservehost on proxypass / http://localhost:8080/ proxypassreverse / http://localhost:8080/ proxypassreversecookiepath / / ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined \u0026lt;/VirtualHost\u0026gt; Reload Apache2 service systemctl reload apache2 ","href":"/blog/gitbucket/install-gitbucket/","title":"Install Gitbucket with Own Hostname"},{"content":"","href":"/categories/tool/","title":"tool"},{"content":"","href":"/tags/apache2/","title":"apache2"},{"content":"","href":"/tags/gerrit/","title":"gerrit"},{"content":"Example to setup 2 sites on Single Host\n http://example.com/gitbucket http://example.com/gerrit  Setup GerritReview  Edit a gerrit.conf in /etc/apache2/sites-available  vim /etc/apache2/sites-available/gerrit.conf Example:\n\u0026lt;virtualhost *:80\u0026gt; servername example.com ProxyPreserveHost On ProxyPass /gerrit http://localhost:8082/gerrit ProxyPassReverse /gerrit http://localhost:8082/gerrit ProxyPassReverseCookiePath /gerrit /gerrit \u0026lt;Proxy *\u0026gt; Order deny,allow Allow from all \u0026lt;/Proxy\u0026gt; \u0026lt;Location /gerrit/login/\u0026gt; AuthType Basic AuthName \u0026quot;Gerrit Code Review\u0026quot; Require valid-user AuthBasicProvider file AuthUserFile /mnt/a/app/gerrit/pwd \u0026lt;/Location\u0026gt; \u0026lt;/virtualhost\u0026gt; Configurate the Gerrit Review check gerrit/etc/gerrit.config  [gerrit] basePath = /mnt/a/repos canonicalWebUrl = http://example.com/gerrit serverId = aafe2a2f-41cc-44da-be9b-43efe61b3d5f [container] javaOptions = \u0026#34;-Dflogger.backend_factory=com.google.common.flogger.backend.log4j.Log4jBackendFactory#getInstance\u0026#34; javaOptions = \u0026#34;-Dflogger.logging_context=com.google.gerrit.server.logging.LoggingContext#getInstance\u0026#34; user = cfei javaHome = /usr/lib/jvm/java-11-openjdk-amd64 [index] type = lucene [auth] type = HTTP [receive] enableSignedPush = true [sendemail] smtpServer = localhost [sshd] listenAddress = *:29418 [httpd] listenUrl = http://*:8082/gerrit [cache] directory = cache Setup GitBucket Suppose to access GitBucket at http://example.com/gitbucket\n Edit a gitbucket.conf in /etc/apache2/sites-available  vim /etc/apache2/sites-available/gitbucket.conf Example:\n\u0026lt;VirtualHost *:80\u0026gt; ServerName gitbucket.example.com # proxy proxypreservehost on proxypass /gitbucket http://localhost:8080/gitbucket/ proxypassreverse /gitbucket http://localhost:8080/gitbucket/ proxypassreversecookiepath /gitbucket /gitbucket ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined \u0026lt;/VirtualHost\u0026gt; Run gitbucket  nohup java -jar gitbucket.war --port=8080 --hostname=example.com --gitbucket.home=/mnt/a/data/gitbucket --prefix=gitbucket \u0026gt; /mnt/a/data/gitbucket/log\u0026gt;\u0026amp;1 \u0026amp; ","href":"/blog/apache2/multiple-sites-on-single-hostname/","title":"Multiple Sites on Single Hostname"},{"content":"Introduction to setup GerritReview on http://gerrit.example.com\nPreparation Gerrit requires JDK\nsudo apt install openjdk-11-jre-headless Download the gerrit-version.war file, for example the folder /home/gerrit/app/\nInitial Site To initial the gerrit site, the site/etc/gerrit.config will be generated\ncd /home/gerrit/app/ java -jar gerrit-3.1.4.war init -d site  Check /home/gerrit/app/site/etc/gerrit.config as following  [gerrit] basePath = git canonicalWebUrl = http://gerrit.example.com serverId = e52b7bb9-4814-4a7b-9534-a1af694d91fd [container] javaOptions = \u0026#34;-Dflogger.backend_factory=com.google.common.flogger.backend.log4j.Log4jBackendFactory#getInstance\u0026#34; javaOptions = \u0026#34;-Dflogger.logging_context=com.google.gerrit.server.logging.LoggingContext#getInstance\u0026#34; user = gerrit javaHome = /usr/lib/jvm/java-11-openjdk-amd64 [index] type = lucene [auth] type = HTTP [receive] enableSignedPush = true [sendemail] smtpServer = localhost [sshd] listenAddress = *:29418 [httpd] listenUrl = http://*:8081/ [cache] directory = cache Initial Gerrit Account of Admin Create the first account as admin\ncd /home/gerrit/app/ htpasswd -c PASSWORD admin Apache2 Configuation Edit a gerrit.conf in /etc/apache2/sites-available\nvim /etc/apache2/sites-available/gerrit.conf Example:\n\u0026lt;virtualhost *:80\u0026gt; servername gerrit.example.com AllowEncodedSlashes On ProxyPreserveHost On ProxyPass / http://localhost:8081/ nocanon ProxyPassReverse / http://localhost:8081/ nocanon ProxyPassReverseCookiePath / / \u0026lt;Proxy *\u0026gt; Order deny,allow Allow from all \u0026lt;/Proxy\u0026gt; \u0026lt;Location /login/\u0026gt; AuthType Basic AuthName \u0026quot;Gerrit Code Review\u0026quot; Require valid-user AuthBasicProvider file AuthUserFile /home/gerrit/app/PASSWORD \u0026lt;/Location\u0026gt; \u0026lt;/virtualhost\u0026gt; Finalize Installation  Restart the GerritReview webserver  cd /home/gerrit/app/ ./site/bin/gerrit.sh restart Create a new user account  htpasswd -m PASSWORD user Reload Apache2 service  sudo systemctl reload apache2 ","href":"/blog/gerrit/install-gerrit-on-own-hostname/","title":"Install GerritReview with Own Hostname"},{"content":"Example 1 List at /\nuser password 123\nsshpass -p 123 ssh user@host \u0026#34;ls -l /\u0026#34; Example 2 Copy folder to host\nsshpass -p 123 scp -r ~/data user@host:~/data ","href":"/blog/linux/linux-execute-command-without-login/","title":"Execute remote bash command without login"},{"content":"Example to setup 2 hosts\nSetup Virtual Host  www - http://www.example.com docs - http://docs.example.com  Setup docs Edit a docs.conf in /etc/apache2/sites-available\nvim /etc/apache2/sites-available/docs.conf Example:\n\u0026lt;VirtualHost *:80\u0026gt; ServerName docs.example.com ServerAdmin webmaster@localhost # The root document DocumentRoot /var/www/docs ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined \u0026lt;/VirtualHost\u0026gt; ","href":"/blog/apache2/multiple-sites-on-multiple-hostnames/","title":"Multiple Sites on Multiple Hostnames"},{"content":"Example to setup 2 sites on 2 ports\n 80 - http://www.example.com 8080 - http://www.example.com:8080  Setup 2 ports Edit the /etc/apache2/ports.conf to add port number of Listen\nListen 80 Listen 8080 Edit the configuration file \u0026lt;VirtualHost *:8080\u0026gt; DocumentRoot /var/www/default \u0026lt;/VirtualHost\u0026gt; ","href":"/blog/apache2/multiple-sites-on-multiple-ports/","title":"Multiple Sites on Multiple Ports"},{"content":"Setup www.example.com a2dissite 000-default.conf sudo systemctl reload apache2 cd /etc/apache2/sites-available/ sudo cp 000-default.conf www.example.com.conf Edit www.example.com.conf # Disable IP access \u0026lt;VirtualHost *:80\u0026gt; # ServerName Server Name ServerName 192.168.1.216 DocumentRoot /dev/null Redirect 403 / ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined \u0026lt;/VirtualHost\u0026gt; # www.example.com \u0026lt;VirtualHost *:80\u0026gt; ServerName www.example.com DocumentRoot /var/www/html/www.example.com # Disable log files access \u0026lt;Files ~ \u0026quot;.log\u0026quot;\u0026gt; Order allow,deny Deny from all \u0026lt;/Files\u0026gt; ErrorLog /var/www/html/www.example.com/error.log CustomLog /var/www/html/www.example.com/access.log combined \u0026lt;/VirtualHost\u0026gt; Enable site a2ensite www.example.com.conf sudo systemctl reload apache2 ","href":"/blog/apache2/disable-ip-access/","title":"Disable IP Access"},{"content":"Configuration files of Apache2 are in /etc/apache2/\nBasic Configuration There are 2 folders in /etc/apache2 are for basic configuration. The file /etc/apache2/sites-available/000-default.conf is enabled by /etc/apache2/sites-enabled/000-default.conf which is a link file\n├── sites-available │ ├── 000-default.conf │ ├── default-ssl.conf └── sites-enabled └── 000-default.conf -\u0026gt; ../sites-available/000-default.conf In 000-default.conf , set DocumentRoot to the folder where index.html located. The 80 port services for HTTP.\n\u0026lt;VirtualHost *:80\u0026gt; DocumentRoot /var/www/default \u0026lt;/VirtualHost\u0026gt; Once the apache service is started, HTTP server runs in background.\n","href":"/blog/apache2/configuration-basic/","title":"Configurate apache2 - basic"},{"content":"Introduction to Apache2 in ubuntu\nInstall Apache2 from apt sudo apt install apache2 Enable the modules cd /etc/apache2/mods-enabled/ sudo ln -s ../mods-available/proxy.load sudo ln -s ../mods-available/proxy.conf sudo ln -s ../mods-available/proxy_http.load sudo ln -s ../mods-available/proxy_balancer.conf sudo ln -s ../mods-available/proxy_balancer.load sudo ln -s ../mods-available/rewrite.load sudo ln -s ../mods-available/ssl.conf sudo ln -s ../mods-available/ssl.load sudo ln -s ../mods-available/slotmem_shm.load sudo ln -s ../mods-available/socache_shmcb.load Apache2 service sudo systemctl stop apache2 sudo systemctl start apache2 sudo systemctl reload apache2 ","href":"/blog/apache2/install/","title":"Install apache2"},{"content":"Initialize own branch to track another branch of another remote git init git checkout --orphan upstream-xxx-master git remote add upstream-xxx https://github.com/other/xxx.git git fetch upstream-xxx git merge upstream-xxx/master Push the own branch to own repo git remote add origin https://github.com/self/yyy.git git push --set-upstream origin upstream-xxx-master Rebase the tracking branch git checkout upstream-xxx-master git fetch upstream-xxx git rebase upstream-xxx/master ","href":"/blog/git/how-to-track-other-repo-branch/","title":"How to track other repo's branch"},{"content":"Add new submodule git submodule add -b dev https://github.com/devcfei/submodule1.git submodule1 git submodule add -b dev https://github.com/devcfei/submodule2.git submodule2 Delete submodules rm -rf \u0026lt;submodule_path\u0026gt; vi .gitmodules vi .git/config rm .git/module/\u0026lt;submodule\u0026gt; git rm --cached \u0026lt;submodule\u0026gt; ","href":"/blog/git/how-to-use-submodule/","title":"How to use submodule"},{"content":"Initial branchs After Rebase After Merge ","href":"/blog/git/rebase-merge/","title":"Rebase and Merge"},{"content":"Welcome!\n","href":"/blog/welcome/","title":"Welcome"},{"content":"","href":"/tags/config/","title":"Configuration"},{"content":"","href":"/tags/og/","title":"Opengraph"},{"content":"","href":"/page/","title":"Pages"},{"content":"","href":"/search/","title":"Search"},{"content":"","href":"/series/","title":"Series"}]
